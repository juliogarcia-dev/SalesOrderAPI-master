// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace SalesOrderAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250125153119_UpdateTables")]
    partial class UpdateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SalesOrderAPI.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("it_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("it_name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("it_price");

                    b.HasKey("Id");

                    b.ToTable("it_items", (string)null);
                });

            modelBuilder.Entity("SalesOrderAPI.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("oi_id");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("oi_itemid");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("oi_price");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("oi_quantity");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("integer")
                        .HasColumnName("oi_salesorderid");

                    b.HasKey("Id");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("order_item", (string)null);
                });

            modelBuilder.Entity("SalesOrderAPI.Models.SalesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("so_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("so_date");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric")
                        .HasColumnName("so_total");

                    b.HasKey("Id");

                    b.ToTable("sales_order", (string)null);
                });

            modelBuilder.Entity("SalesOrderAPI.Models.OrderItem", b =>
                {
                    b.HasOne("SalesOrderAPI.Models.SalesOrder", null)
                        .WithMany("Items")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SalesOrderAPI.Models.SalesOrder", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
